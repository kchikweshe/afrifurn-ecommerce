version: '3.8'
services:
  afrifurn-mongodb:
    container_name: afrifurn-mongodb
    image: mongo
 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=kchikweshe
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
      
    networks:
      - afrifurn-network
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db

  afrifurn-mongo-express:
    container_name: afrifurn-mongo-express
    image: mongo-express
    env_file:
      - .env.production
    ports:
      - 8081:8081
    networks:
      - afrifurn-network
    depends_on:
      - afrifurn-mongodb
  eureka-service:
    container_name: eureka-service
    image: kchikweshe/afrifurn-api-gateway-service
    build:
      context: ./eureka-server
      dockerfile: ./eureka-server/Dockerfile
    networks:
      - afrifurn-network
    ports:
      - 8761:8761
    env_file:
      - .env.production
  api-gateway-service:
    container_name: api-gateway
    build:
      image: kchikweshe/afrifurn-api-gateway-service
      context: ./api-gateway
      dockerfile: ./api-gateway/Dockerfile
    networks:
      - afrifurn-network
    ports:
      - 8090:8090
    env_file:
      - ./api-gateway/.env.gateway
    depends_on:
      - eureka-service
  product-service:
    container_name: afrifurn-product-service
    image: kchikweshe/afrifurn-product-service
    build: 
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env.production
    networks:
      - afrifurn-network
    depends_on:
      - afrifurn-mongodb
      - eureka-service
      - api-gateway-service

  afrifurn-frontend:
    container_name: afrifurn-frontend
    build: 
      context: ./afrifurn-frontend
      dockerfile: ./afrifurn-frontend/Dockerfile
      
      args:
        - NEXT_HOST_IP=${NEXT_HOST_IP}
    
    image: kchikweshe/afrifurn-frontend

    env_file:
      - .env.frontend
    ports:
      - 3000:3000
    networks:
      - afrifurn-network 
     
 
volumes:
  mongodb_data_container:
    driver: local

networks:
  afrifurn-network:
    


