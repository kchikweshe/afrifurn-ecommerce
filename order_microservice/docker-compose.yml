version: '3.8'

services:
  
  eureka:
    container_name: eureka
    image: afrifurn-eureka-service
    ports:
      - 8761:8761
    environment:
      - EUREKA_SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    
    expose:
      - 8761

  web:
    container_name: web
    build: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0 --port 8004'
    ports:
      - "8004:8004"
    depends_on:
      - eureka
      - db
    expose:
      - 8004
    environment:
      - WAIT_HOSTS=kafka:29092
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - DATABASE_URL=postgresql://fastapi_traefik:fastapi_traefik@db:5432/afrifurn_order_service

  db:
    container_name: db
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=fastapi_traefik
      - POSTGRES_PASSWORD=fastapi_traefik
      - POSTGRES_DB=afrifurn_order_service

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    hostname: kafka
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"

    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092, PLAINTEXTLOCAL://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR= 1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR= 1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_JMX_PORT=9999
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXTLOCAL:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:29092, PLAINTEXTLOCAL://:9092

    depends_on:
      - zookeeper

volumes:
  postgres_data:
networks:
  default:
    name: kafka-network